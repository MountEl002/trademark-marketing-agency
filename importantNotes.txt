1. Pre-deployment checklist
   # Check for TypeScript errors
        a. npx tsc --noEmit
   # Check for code style issues
        b. npm run lint
    # Test production build locally
        c. npm run build
# Then run the production build
        d. npm run start
# Check for any unused CSS with:
        e. npx tailwindcss-cli build -o build.css
# Analyze bundle size
        f. ANALYZE=true npm run build      


2. Forcefully remove a folder or file
     Remove-Item -Recurse -Force .next


git branch -d branchname     # Safe delete - will warn if branch has unmerged changes
git branch -D branchname     # Force delete - will delete regardless of merge status

# To delete a remote branch:
    git push origin --delete branchname
# OR
     git push origin :branchname

# See all remote branches
git branch -r 

# See both local and remote branches
git branch -a 

# Create a New Branch
git branch <branch_name>

# Switch to the New Branch
git checkout <branch_name>

# Combining the Steps
git checkout -b <branch_name>

# Fetch Remote Changes
git fetch origin 


# Compare your local branch with its remote counterpart:
git diff <local-branch> origin/<remote-branch>

# Compare commit histories (This displays commits that exist in your local branch but not in the remote branch. )
git log origin/<remote-branch>..<local-branch> 

Removing and adding cached file names:
git rm -r --cached .
git add --all .

git status ##Review that **only** changes staged are renames

## Commit your changes after reviewing:
git commit -a -m "Fixing file name casing"
git push origin main

How to move into a directory whose name has special characters:
cd -LiteralPath "[orderNumber]"

Get a list of commits with their hashes and messages:
git log --oneline

How to generate a unique character set using node:
node -e "console.log(require('crypto').randomBytes(32).toStringBytes(32).toString('hex'))"